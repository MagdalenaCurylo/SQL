-- In this SQL code, I am querying Chinook database that represents a digital media store, including tables for artists, 
-- albums, media tracks, invoices, customers and employees.
-- Chinook database includes 11 tables and over 15,000 rows of data.

-- how many artists and albums are stored in the database? 
SELECT COUNT(DISTINCT ar.Name) AS 'total artists', 
       COUNT(DISTINCT al.Title) AS 'total albums'
FROM chinook.artists ar
JOIN chinook.albums al
ON ar.ArtistId = al.ArtistId;

-- how many tracks per each album?
-- order by greatest numer of tracks per album 
SELECT t.AlbumId, a.Title AS Album_Name, COUNT(t.trackId) AS total_tracks
FROM chinook.tracks t
JOIN chinook.albums a
ON t.AlbumId = a.AlbumId
GROUP BY t.AlbumId
ORDER BY total_tracks DESC;

-- customers (their full names, customer ID, and country) who are not in the US
SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country <> 'USA';

-- how many customers are from US and how many not from US?
SELECT COUNT(CustomerId)
FROM chinook.customers
WHERE Country = 'USA'
UNION
SELECT COUNT(CustomerId)
FROM chinook.customers
WHERE Country <> 'USA';

-- only the Customers from Brazil
SELECT *
FROM chinook.customers
WHERE Country = 'Brazil';

-- the Invoices of customers who are from Brazil. 
-- showing customer's full name, Invoice ID, Date of the invoice, and billing country, 
-- ordered by most recent orders
SELECT * FROM chinook.invoices limit 5;
SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = c.CustomerId
WHERE i.BillingCountry = 'Brazil'
ORDER BY i.InvoiceDate DESC;

-- the Employees who are Sales Agents
SELECT FirstName, LastName, Title
FROM chinook.employees
WHERE Title LIKE '%Sales%Agent%';

-- unique/distinct list of billing countries from the Invoice table
SELECT DISTINCT(BillingCountry)
FROM chinook.invoices;

-- a query that shows the invoices associated with each sales agent 
-- the resulting table should include the Sales Agent's full name
SELECT e.FirstName, e.LastName, i.InvoiceId
FROM chinook.customers c
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId;

-- the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers
SELECT i.InvoiceId, 
    i.Total AS InvoiceTotal, 
    c.FirstName AS CustFirstName, 
    c.LastName AS CustLastName, 
    i.BillingCountry, 
    e.FirstName AS EmpFirstName,
    e.LastName AS EmpLastName
FROM chinook.customers c
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
ORDER BY InvoiceId;

-- total sales for 2009? 
SELECT ROUND(SUM(Total),2) AS TotalSales2009
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

-- a query that includes the purchased track name with each invoice line ID
SELECT ii.InvoiceLineId, t.Name AS TrackTitle
FROM chinook.invoice_items ii
JOIN chinook.tracks t
ON ii.TrackId = t.TrackId
ORDER BY InvoiceLineId;

-- a query that includes the purchased track name AND artist name with each invoice line ID
SELECT ii.InvoiceLineId, t.Name AS TrackTitle, a.name AS Artist
FROM chinook.invoice_items ii
JOIN chinook.tracks t
ON ii.TrackId = t.TrackId
JOIN chinook.albums al
ON t.AlbumId = al.albumId
JOIN chinook.artists a
ON al.ArtistId = a.ArtistId
ORDER BY InvoiceLineId;

-- a query that shows all the Tracks, and include the Album name, Media type, and Genre
SELECT t.TrackId, 
    t.Name AS TrackName,
    al.Title AS AlbumName,
    mt.Name AS MediaType,
    g.Name AS Genre
FROM chinook.tracks t
JOIN chinook.albums al
ON t.AlbumId = al.AlbumId
JOIN chinook.media_types mt
ON t.MediaTypeId = mt.MediaTypeId
JOIN chinook.genres g
ON t.GenreId = g.GenreId
ORDER BY TrackId;

-- total sales made by each sales agent (including employee ID and full name)
SELECT e.EmployeeId, 
    e.FirstName,
    e.LastName,
    ROUND(SUM(i.total),2) AS TotalSales
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = i.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
GROUP BY employeeId;

-- sales agent who made the most dollars in sales in 2009?
SELECT e.EmployeeId, 
    e.FirstName,
    e.LastName,
    ROUND(SUM(i.total),2) AS TotalSales
FROM chinook.invoices i
JOIN chinook.customers c
ON i.CustomerId = i.CustomerId
JOIN chinook.employees e
ON c.SupportRepId = e.EmployeeId
GROUP BY employeeId
ORDER BY TotalSales DESC
LIMIT 1;
